{"ast":null,"code":"import _classCallCheck from \"/home/2124519/Desktop/IETI-PusherCoin/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/2124519/Desktop/IETI-PusherCoin/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/2124519/Desktop/IETI-PusherCoin/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/2124519/Desktop/IETI-PusherCoin/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/2124519/Desktop/IETI-PusherCoin/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/2124519/Desktop/IETI-PusherCoin/src/Today/Today.js\";\nimport React, { Component } from 'react';\nimport './Today.css';\nimport axios from 'axios';\n\nvar Today =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Today, _Component);\n\n  // Adds a class constructor that assigns the initial state values:\n  function Today() {\n    var _this;\n\n    _classCallCheck(this, Today);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Today).call(this));\n    _this.state = {\n      btcprice: '',\n      ltcprice: '',\n      ethprice: ''\n    };\n    return _this;\n  } // This is called when an instance of a component is being created and inserted into the DOM.\n\n\n  _createClass(Today, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var _this2 = this;\n\n      axios.get('https://min-api.cryptocompare.com/data/pricemulti?fsyms=BTC,ETH,LTC&tsyms=USD').then(function (response) {\n        // We set the latest prices in the state to the prices gotten from Cryptocurrency.\n        _this2.setState({\n          btcprice: response.data.BTC.USD\n        });\n\n        _this2.setState({\n          ethprice: response.data.ETH.USD\n        });\n\n        _this2.setState({\n          ltcprice: response.data.LTC.USD\n        });\n      }) // Catch any error here\n      .catch(function (error) {\n        console.log(error);\n      });\n    } // The render method contains the JSX code which will be compiled to HTML.\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"today--section container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, \"Current Price\"), React.createElement(\"div\", {\n        className: \"columns today--section__box\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"column btc--section\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, React.createElement(\"h5\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, \"$\", this.state.btcprice), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, \"1 BTC\")), React.createElement(\"div\", {\n        className: \"column eth--section\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, React.createElement(\"h5\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, \"$\", this.state.ethprice), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, \"1 ETH\")), React.createElement(\"div\", {\n        className: \"column ltc--section\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(\"h5\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, \"$\", this.state.ltcprice), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, \"1 LTC\"))));\n    }\n  }]);\n\n  return Today;\n}(Component);\n\nexport default Today;","map":{"version":3,"sources":["/home/2124519/Desktop/IETI-PusherCoin/src/Today/Today.js"],"names":["React","Component","axios","Today","state","btcprice","ltcprice","ethprice","get","then","response","setState","data","BTC","USD","ETH","LTC","catch","error","console","log"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACI,OAAO,aAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;;IAEEC,K;;;;;AACE;AACA,mBAAe;AAAA;;AAAA;;AACX;AACA,UAAKC,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAE,EADD;AAETC,MAAAA,QAAQ,EAAE,EAFD;AAGTC,MAAAA,QAAQ,EAAE;AAHD,KAAb;AAFW;AAOd,G,CACD;;;;;yCACsB;AAAA;;AAClBL,MAAAA,KAAK,CAACM,GAAN,CAAU,+EAAV,EACKC,IADL,CACU,UAAAC,QAAQ,EAAI;AACd;AACA,QAAA,MAAI,CAACC,QAAL,CAAc;AAAEN,UAAAA,QAAQ,EAAEK,QAAQ,CAACE,IAAT,CAAcC,GAAd,CAAkBC;AAA9B,SAAd;;AACA,QAAA,MAAI,CAACH,QAAL,CAAc;AAAEJ,UAAAA,QAAQ,EAAEG,QAAQ,CAACE,IAAT,CAAcG,GAAd,CAAkBD;AAA9B,SAAd;;AACA,QAAA,MAAI,CAACH,QAAL,CAAc;AAAEL,UAAAA,QAAQ,EAAEI,QAAQ,CAACE,IAAT,CAAcI,GAAd,CAAkBF;AAA9B,SAAd;AACH,OANL,EAOI;AAPJ,OAQKG,KARL,CAQW,UAAAC,KAAK,EAAI;AACZC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH,OAVL;AAWH,K,CACD;;;;6BACS;AACL,aACI;AAAK,QAAA,SAAS,EAAC,0BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADJ,EAEI;AAAK,QAAA,SAAS,EAAC,6BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAM,KAAKd,KAAL,CAAWC,QAAjB,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFJ,CADJ,EAKI;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAM,KAAKD,KAAL,CAAWG,QAAjB,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFJ,CALJ,EASI;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAM,KAAKH,KAAL,CAAWE,QAAjB,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFJ,CATJ,CAFJ,CADJ;AAmBH;;;;EA7CWL,S;;AAgDhB,eAAeE,KAAf","sourcesContent":["import React, { Component } from 'react';\n    import './Today.css'\n    import axios from 'axios'\n\nclass Today extends Component {\n        // Adds a class constructor that assigns the initial state values:\n        constructor () {\n            super();\n            this.state = {\n                btcprice: '',\n                ltcprice: '',\n                ethprice: ''\n            };\n        }\n        // This is called when an instance of a component is being created and inserted into the DOM.\n        componentWillMount () {\n            axios.get('https://min-api.cryptocompare.com/data/pricemulti?fsyms=BTC,ETH,LTC&tsyms=USD')\n                .then(response => {\n                    // We set the latest prices in the state to the prices gotten from Cryptocurrency.\n                    this.setState({ btcprice: response.data.BTC.USD });\n                    this.setState({ ethprice: response.data.ETH.USD });\n                    this.setState({ ltcprice: response.data.LTC.USD });\n                })\n                // Catch any error here\n                .catch(error => {\n                    console.log(error)\n                })\n        }\n        // The render method contains the JSX code which will be compiled to HTML.\n        render() {\n            return (\n                <div className=\"today--section container\">\n                    <h2>Current Price</h2>\n                    <div className=\"columns today--section__box\">\n                        <div className=\"column btc--section\">\n                            <h5>${this.state.btcprice}</h5>\n                            <p>1 BTC</p>\n                        </div>\n                        <div className=\"column eth--section\">\n                            <h5>${this.state.ethprice}</h5>\n                            <p>1 ETH</p>\n                        </div>\n                        <div className=\"column ltc--section\">\n                            <h5>${this.state.ltcprice}</h5>\n                            <p>1 LTC</p>\n                        </div>\n                    </div>\n                </div>\n            )\n        }\n    }\n\n    export default Today;"]},"metadata":{},"sourceType":"module"}