{"ast":null,"code":"import _classCallCheck from \"/home/2124519/Desktop/IETI-PusherCoin/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/2124519/Desktop/IETI-PusherCoin/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/2124519/Desktop/IETI-PusherCoin/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/2124519/Desktop/IETI-PusherCoin/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/2124519/Desktop/IETI-PusherCoin/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/2124519/Desktop/IETI-PusherCoin/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport React, { Component } from 'react';\nimport './History.css';\nimport axios from 'axios';\nimport moment from 'moment';\n\nvar History =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(History, _Component);\n\n  function History() {\n    var _this;\n\n    _classCallCheck(this, History);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(History).call(this));\n    _this.state = {\n      todayprice: {},\n      yesterdayprice: {},\n      twodaysprice: {},\n      threedaysprice: {},\n      fourdaysprice: {}\n    };\n    _this.getBTCPrices = _this.getBTCPrices.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.getETHPrices = _this.getETHPrices.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.getLTCPrices = _this.getLTCPrices.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  } // This function gets the ETH price for a specific timestamp/date. The date is passed in as an argument\n\n\n  _createClass(History, [{\n    key: \"getETHPrices\",\n    value: function getETHPrices(date) {\n      return axios.get('https://min-api.cryptocompare.com/data/pricehistorical?fsym=ETH&tsyms=USD&ts=' + date);\n    } // This function gets the BTC price for a specific timestamp/date. The date is passed in as an argument\n\n  }, {\n    key: \"getBTCPrices\",\n    value: function getBTCPrices(date) {\n      return axios.get('https://min-api.cryptocompare.com/data/pricehistorical?fsym=BTC&tsyms=USD&ts=' + date);\n    } // This function gets the LTC price for a specific timestamp/date. The date is passed in as an argument\n\n  }, {\n    key: \"getLTCPrices\",\n    value: function getLTCPrices(date) {\n      return axios.get('https://min-api.cryptocompare.com/data/pricehistorical?fsym=LTC&tsyms=USD&ts=' + date);\n    }\n  }]);\n\n  return History;\n}(Component);","map":{"version":3,"sources":["/home/2124519/Desktop/IETI-PusherCoin/src/History/History.js"],"names":["React","Component","axios","moment","History","state","todayprice","yesterdayprice","twodaysprice","threedaysprice","fourdaysprice","getBTCPrices","bind","getETHPrices","getLTCPrices","date","get"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACI,OAAO,eAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,QAAnB;;IAEEC,O;;;;;AACA,qBAAe;AAAA;;AAAA;;AACb;AACA,UAAKC,KAAL,GAAa;AACTC,MAAAA,UAAU,EAAE,EADH;AAETC,MAAAA,cAAc,EAAE,EAFP;AAGTC,MAAAA,YAAY,EAAE,EAHL;AAITC,MAAAA,cAAc,EAAE,EAJP;AAKTC,MAAAA,aAAa,EAAE;AALN,KAAb;AAOA,UAAKC,YAAL,GAAoB,MAAKA,YAAL,CAAkBC,IAAlB,uDAApB;AACA,UAAKC,YAAL,GAAoB,MAAKA,YAAL,CAAkBD,IAAlB,uDAApB;AACA,UAAKE,YAAL,GAAoB,MAAKA,YAAL,CAAkBF,IAAlB,uDAApB;AAXa;AAYd,G,CACD;;;;;iCACcG,I,EAAM;AAChB,aAAOb,KAAK,CAACc,GAAN,CAAU,kFAAkFD,IAA5F,CAAP;AACH,K,CACD;;;;iCACcA,I,EAAM;AAChB,aAAOb,KAAK,CAACc,GAAN,CAAU,kFAAkFD,IAA5F,CAAP;AACH,K,CACD;;;;iCACcA,I,EAAM;AAChB,aAAOb,KAAK,CAACc,GAAN,CAAU,kFAAkFD,IAA5F,CAAP;AACH;;;;EAzBed,S","sourcesContent":["import React, { Component } from 'react';\n    import './History.css'\n    import axios from 'axios'\n    import moment from 'moment'\n\nclass History extends Component {\n      constructor () {\n        super();\n        this.state = {\n            todayprice: {},\n            yesterdayprice: {},\n            twodaysprice: {},\n            threedaysprice: {},\n            fourdaysprice: {}\n        }\n        this.getBTCPrices = this.getBTCPrices.bind(this);\n        this.getETHPrices = this.getETHPrices.bind(this);\n        this.getLTCPrices = this.getLTCPrices.bind(this);\n      }\n      // This function gets the ETH price for a specific timestamp/date. The date is passed in as an argument\n      getETHPrices (date) {\n          return axios.get('https://min-api.cryptocompare.com/data/pricehistorical?fsym=ETH&tsyms=USD&ts=' + date);\n      }\n      // This function gets the BTC price for a specific timestamp/date. The date is passed in as an argument\n      getBTCPrices (date) {\n          return axios.get('https://min-api.cryptocompare.com/data/pricehistorical?fsym=BTC&tsyms=USD&ts=' + date);\n      }\n      // This function gets the LTC price for a specific timestamp/date. The date is passed in as an argument\n      getLTCPrices (date) {\n          return axios.get('https://min-api.cryptocompare.com/data/pricehistorical?fsym=LTC&tsyms=USD&ts=' + date);\n      }\n\n    }"]},"metadata":{},"sourceType":"module"}