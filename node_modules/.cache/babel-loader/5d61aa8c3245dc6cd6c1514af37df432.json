{"ast":null,"code":"import _classCallCheck from \"/home/2124519/Desktop/IETI-PusherCoin/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/2124519/Desktop/IETI-PusherCoin/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/2124519/Desktop/IETI-PusherCoin/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/2124519/Desktop/IETI-PusherCoin/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/2124519/Desktop/IETI-PusherCoin/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/2124519/Desktop/IETI-PusherCoin/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/2124519/Desktop/IETI-PusherCoin/src/History/History.js\";\nimport React, { Component } from 'react';\nimport './History.css';\nimport axios from 'axios';\nimport moment from 'moment';\n\nvar History =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(History, _Component);\n\n  function History() {\n    var _this;\n\n    _classCallCheck(this, History);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(History).call(this));\n    _this.state = {\n      todayprice: {},\n      yesterdayprice: {},\n      twodaysprice: {},\n      threedaysprice: {},\n      fourdaysprice: {}\n    };\n    _this.getBTCPrices = _this.getBTCPrices.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.getETHPrices = _this.getETHPrices.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.getLTCPrices = _this.getLTCPrices.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  } // This function gets the ETH price for a specific timestamp/date. The date is passed in as an argument\n\n\n  _createClass(History, [{\n    key: \"getETHPrices\",\n    value: function getETHPrices(date) {\n      return axios.get('https://min-api.cryptocompare.com/data/pricehistorical?fsym=ETH&tsyms=USD&ts=' + date);\n    } // This function gets the BTC price for a specific timestamp/date. The date is passed in as an argument\n\n  }, {\n    key: \"getBTCPrices\",\n    value: function getBTCPrices(date) {\n      return axios.get('https://min-api.cryptocompare.com/data/pricehistorical?fsym=BTC&tsyms=USD&ts=' + date);\n    } // This function gets the LTC price for a specific timestamp/date. The date is passed in as an argument\n\n  }, {\n    key: \"getLTCPrices\",\n    value: function getLTCPrices(date) {\n      return axios.get('https://min-api.cryptocompare.com/data/pricehistorical?fsym=LTC&tsyms=USD&ts=' + date);\n    } // This function gets the prices for the current date.\n\n  }, {\n    key: \"getTodayPrice\",\n    value: function getTodayPrice() {\n      var _this2 = this;\n\n      // Get today's date in timestamp\n      var t = moment().unix(); // axios.all is used to make concurrent API requests. These requests were the functions we first created and they accept an argument of the date required.\n\n      axios.all([this.getETHPrices(t), this.getBTCPrices(t), this.getLTCPrices(t)]).then(axios.spread(function (eth, btc, ltc) {\n        var f = {\n          date: moment.unix(t).format(\"MMMM Do YYYY\"),\n          eth: eth.data.ETH.USD,\n          btc: btc.data.BTC.USD,\n          ltc: ltc.data.LTC.USD // Set the state of todayprice to the content of the object f\n\n        };\n\n        _this2.setState({\n          todayprice: f\n        });\n      }));\n    } // This function gets the prices for the yesterday.\n\n  }, {\n    key: \"getYesterdayPrice\",\n    value: function getYesterdayPrice() {\n      var _this3 = this;\n\n      // Get yesterday's date in timestamp\n      var t = moment().subtract(1, 'days').unix(); // axios.all is used to make concurrent API requests. These requests were the functions we first created and they accept an argument of the date required.\n\n      axios.all([this.getETHPrices(t), this.getBTCPrices(t), this.getLTCPrices(t)]).then(axios.spread(function (eth, btc, ltc) {\n        var f = {\n          date: moment.unix(t).format(\"MMMM Do YYYY\"),\n          eth: eth.data.ETH.USD,\n          btc: btc.data.BTC.USD,\n          ltc: ltc.data.LTC.USD // Set the state of yesterdayprice to the content of the object f\n\n        };\n\n        _this3.setState({\n          yesterdayprice: f\n        });\n      }));\n    } // This function gets the prices for the two days ago.\n\n  }, {\n    key: \"getTwoDaysPrice\",\n    value: function getTwoDaysPrice() {\n      var _this4 = this;\n\n      // Get the date for two days ago in timestamp\n      var t = moment().subtract(2, 'days').unix(); // axios.all is used to make concurrent API requests. These requests were the functions we first created and they accept an argument of the date required.\n\n      axios.all([this.getETHPrices(t), this.getBTCPrices(t), this.getLTCPrices(t)]).then(axios.spread(function (eth, btc, ltc) {\n        var f = {\n          date: moment.unix(t).format(\"MMMM Do YYYY\"),\n          eth: eth.data.ETH.USD,\n          btc: btc.data.BTC.USD,\n          ltc: ltc.data.LTC.USD // Set the state of twodaysprice to the content of the object f\n\n        };\n\n        _this4.setState({\n          twodaysprice: f\n        });\n      }));\n    } // This function gets the prices for the three days ago.\n\n  }, {\n    key: \"getThreeDaysPrice\",\n    value: function getThreeDaysPrice() {\n      var _this5 = this;\n\n      // Get the date for three days ago in timestamp\n      var t = moment().subtract(3, 'days').unix(); // axios.all is used to make concurrent API requests. These requests were the functions we first created and they accept an argument of the date required.\n\n      axios.all([this.getETHPrices(t), this.getBTCPrices(t), this.getLTCPrices(t)]).then(axios.spread(function (eth, btc, ltc) {\n        var f = {\n          date: moment.unix(t).format(\"MMMM Do YYYY\"),\n          eth: eth.data.ETH.USD,\n          btc: btc.data.BTC.USD,\n          ltc: ltc.data.LTC.USD // Set the state of threedaysprice to the content of the object f\n\n        };\n\n        _this5.setState({\n          threedaysprice: f\n        });\n      }));\n    } // This function gets the prices for the four days ago.\n\n  }, {\n    key: \"getFourDaysPrice\",\n    value: function getFourDaysPrice() {\n      var _this6 = this;\n\n      // Get the date for four days ago in timestamp\n      var t = moment().subtract(4, 'days').unix(); // axios.all is used to make concurrent API requests. These requests were the functions we first created and they accept an argument of the date required.\n\n      axios.all([this.getETHPrices(t), this.getBTCPrices(t), this.getLTCPrices(t)]).then(axios.spread(function (eth, btc, ltc) {\n        var f = {\n          date: moment.unix(t).format(\"MMMM Do YYYY\"),\n          eth: eth.data.ETH.USD,\n          btc: btc.data.BTC.USD,\n          ltc: ltc.data.LTC.USD // Set the state of fourdaysprice to the content of the object f\n\n        };\n\n        _this6.setState({\n          fourdaysprice: f\n        });\n      }));\n    } // This is called when an instance of a component is being created and inserted into the DOM.\n\n  }, {\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.getTodayPrice();\n      this.getYesterdayPrice();\n      this.getTwoDaysPrice();\n      this.getThreeDaysPrice();\n      this.getFourDaysPrice();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"history--section container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, \"History (Past 5 days)\"), React.createElement(\"div\", {\n        className: \"history--section__box\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"history--section__box__inner\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, this.state.todayprice.date), React.createElement(\"div\", {\n        className: \"columns\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"column\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, \"1 BTC = $\", this.state.todayprice.btc)), React.createElement(\"div\", {\n        className: \"column\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, \"1 ETH = $\", this.state.todayprice.eth)), React.createElement(\"div\", {\n        className: \"column\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, \"1 LTC = $\", this.state.todayprice.ltc)))), React.createElement(\"div\", {\n        className: \"history--section__box__inner\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, this.state.yesterdayprice.date), React.createElement(\"div\", {\n        className: \"columns\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"column\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, \"1 BTC = $\", this.state.yesterdayprice.btc)), React.createElement(\"div\", {\n        className: \"column\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, \"1 ETH = $\", this.state.yesterdayprice.eth)), React.createElement(\"div\", {\n        className: \"column\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, \"1 LTC = $\", this.state.yesterdayprice.ltc)))), React.createElement(\"div\", {\n        className: \"history--section__box__inner\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, this.state.twodaysprice.date), React.createElement(\"div\", {\n        className: \"columns\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"column\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, \"1 BTC = $\", this.state.twodaysprice.btc)), React.createElement(\"div\", {\n        className: \"column\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }, \"1 ETH = $\", this.state.twodaysprice.eth)), React.createElement(\"div\", {\n        className: \"column\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, \"1 LTC = $\", this.state.twodaysprice.ltc)))), React.createElement(\"div\", {\n        className: \"history--section__box__inner\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, this.state.threedaysprice.date), React.createElement(\"div\", {\n        className: \"columns\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"column\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }, \"1 BTC = $\", this.state.threedaysprice.btc)), React.createElement(\"div\", {\n        className: \"column\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, \"1 ETH = $\", this.state.threedaysprice.eth)), React.createElement(\"div\", {\n        className: \"column\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }, \"1 LTC = $\", this.state.threedaysprice.ltc)))), React.createElement(\"div\", {\n        className: \"history--section__box__inner\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }, this.state.fourdaysprice.date), React.createElement(\"div\", {\n        className: \"columns\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"column\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }, \"1 BTC = $\", this.state.fourdaysprice.btc)), React.createElement(\"div\", {\n        className: \"column\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }, \"1 ETH = $\", this.state.fourdaysprice.eth)), React.createElement(\"div\", {\n        className: \"column\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      }, \"1 LTC = $\", this.state.fourdaysprice.ltc))))));\n    }\n  }]);\n\n  return History;\n}(Component);\n\nexport default History;","map":{"version":3,"sources":["/home/2124519/Desktop/IETI-PusherCoin/src/History/History.js"],"names":["React","Component","axios","moment","History","state","todayprice","yesterdayprice","twodaysprice","threedaysprice","fourdaysprice","getBTCPrices","bind","getETHPrices","getLTCPrices","date","get","t","unix","all","then","spread","eth","btc","ltc","f","format","data","ETH","USD","BTC","LTC","setState","subtract","getTodayPrice","getYesterdayPrice","getTwoDaysPrice","getThreeDaysPrice","getFourDaysPrice"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n    import './History.css'\n    import axios from 'axios'\n    import moment from 'moment'\n\nclass History extends Component {\n      constructor () {\n        super();\n        this.state = {\n            todayprice: {},\n            yesterdayprice: {},\n            twodaysprice: {},\n            threedaysprice: {},\n            fourdaysprice: {}\n        }\n        this.getBTCPrices = this.getBTCPrices.bind(this);\n        this.getETHPrices = this.getETHPrices.bind(this);\n        this.getLTCPrices = this.getLTCPrices.bind(this);\n      }\n      // This function gets the ETH price for a specific timestamp/date. The date is passed in as an argument\n      getETHPrices (date) {\n          return axios.get('https://min-api.cryptocompare.com/data/pricehistorical?fsym=ETH&tsyms=USD&ts=' + date);\n      }\n      // This function gets the BTC price for a specific timestamp/date. The date is passed in as an argument\n      getBTCPrices (date) {\n          return axios.get('https://min-api.cryptocompare.com/data/pricehistorical?fsym=BTC&tsyms=USD&ts=' + date);\n      }\n      // This function gets the LTC price for a specific timestamp/date. The date is passed in as an argument\n      getLTCPrices (date) {\n          return axios.get('https://min-api.cryptocompare.com/data/pricehistorical?fsym=LTC&tsyms=USD&ts=' + date);\n      }\n      // This function gets the prices for the current date.\n          getTodayPrice () {\n              // Get today's date in timestamp\n              let t = moment().unix()\n              // axios.all is used to make concurrent API requests. These requests were the functions we first created and they accept an argument of the date required.\n              axios.all([this.getETHPrices(t), this.getBTCPrices(t), this.getLTCPrices(t)])\n                  .then(axios.spread((eth, btc, ltc) => {\n                      let f = {\n                          date: moment.unix(t).format(\"MMMM Do YYYY\"),\n                          eth: eth.data.ETH.USD,\n                          btc: btc.data.BTC.USD,\n                          ltc: ltc.data.LTC.USD\n                      }\n                      // Set the state of todayprice to the content of the object f\n                      this.setState({ todayprice: f });\n                  }));\n          }\n          // This function gets the prices for the yesterday.\n          getYesterdayPrice () {\n              // Get yesterday's date in timestamp\n              let t = moment().subtract(1, 'days').unix();\n              // axios.all is used to make concurrent API requests. These requests were the functions we first created and they accept an argument of the date required.\n              axios.all([this.getETHPrices(t), this.getBTCPrices(t), this.getLTCPrices(t)])\n                  .then(axios.spread((eth, btc, ltc) => {\n                      let f = {\n                          date: moment.unix(t).format(\"MMMM Do YYYY\"),\n                          eth: eth.data.ETH.USD,\n                          btc: btc.data.BTC.USD,\n                          ltc: ltc.data.LTC.USD\n                      }\n                      // Set the state of yesterdayprice to the content of the object f\n                      this.setState({ yesterdayprice: f });\n                  }));\n          }\n          // This function gets the prices for the two days ago.\n          getTwoDaysPrice () {\n              // Get the date for two days ago in timestamp\n              let t = moment().subtract(2, 'days').unix();\n              // axios.all is used to make concurrent API requests. These requests were the functions we first created and they accept an argument of the date required.\n              axios.all([this.getETHPrices(t), this.getBTCPrices(t), this.getLTCPrices(t)])\n                  .then(axios.spread((eth, btc, ltc) => {\n                      let f = {\n                          date: moment.unix(t).format(\"MMMM Do YYYY\"),\n                          eth: eth.data.ETH.USD,\n                          btc: btc.data.BTC.USD,\n                          ltc: ltc.data.LTC.USD\n                      }\n                      // Set the state of twodaysprice to the content of the object f\n                      this.setState({ twodaysprice: f });\n                  }));\n          }\n          // This function gets the prices for the three days ago.\n          getThreeDaysPrice () {\n              // Get the date for three days ago in timestamp\n              let t = moment().subtract(3, 'days').unix();\n              // axios.all is used to make concurrent API requests. These requests were the functions we first created and they accept an argument of the date required.\n              axios.all([this.getETHPrices(t), this.getBTCPrices(t), this.getLTCPrices(t)])\n                  .then(axios.spread((eth, btc, ltc) => {\n                      let f = {\n                          date: moment.unix(t).format(\"MMMM Do YYYY\"),\n                          eth: eth.data.ETH.USD,\n                          btc: btc.data.BTC.USD,\n                          ltc: ltc.data.LTC.USD\n                      }\n                      // Set the state of threedaysprice to the content of the object f\n                      this.setState({ threedaysprice: f });\n                  }));\n          }\n          // This function gets the prices for the four days ago.\n          getFourDaysPrice () {\n              // Get the date for four days ago in timestamp\n              let t = moment().subtract(4, 'days').unix();\n              // axios.all is used to make concurrent API requests. These requests were the functions we first created and they accept an argument of the date required.\n              axios.all([this.getETHPrices(t), this.getBTCPrices(t), this.getLTCPrices(t)])\n                  .then(axios.spread((eth, btc, ltc) => {\n                      let f = {\n                          date: moment.unix(t).format(\"MMMM Do YYYY\"),\n                          eth: eth.data.ETH.USD,\n                          btc: btc.data.BTC.USD,\n                          ltc: ltc.data.LTC.USD\n                      }\n                      // Set the state of fourdaysprice to the content of the object f\n                      this.setState({ fourdaysprice: f });\n                  }));\n          }\n          // This is called when an instance of a component is being created and inserted into the DOM.\n          componentWillMount () {\n              this.getTodayPrice();\n              this.getYesterdayPrice();\n              this.getTwoDaysPrice();\n              this.getThreeDaysPrice();\n              this.getFourDaysPrice();\n          }\n          render() {\n                      return (\n                          <div className=\"history--section container\">\n                              <h2>History (Past 5 days)</h2>\n                              <div className=\"history--section__box\">\n                                  <div className=\"history--section__box__inner\">\n                                      <h4>{this.state.todayprice.date}</h4>\n                                      <div className=\"columns\">\n                                          <div className=\"column\">\n                                              <p>1 BTC = ${this.state.todayprice.btc}</p>\n                                          </div>\n                                          <div className=\"column\">\n                                              <p>1 ETH = ${this.state.todayprice.eth}</p>\n                                          </div>\n                                          <div className=\"column\">\n                                              <p>1 LTC = ${this.state.todayprice.ltc}</p>\n                                          </div>\n                                      </div>\n                                  </div>\n                                  <div className=\"history--section__box__inner\">\n                                      <h4>{this.state.yesterdayprice.date}</h4>\n                                      <div className=\"columns\">\n                                          <div className=\"column\">\n                                              <p>1 BTC = ${this.state.yesterdayprice.btc}</p>\n                                          </div>\n                                          <div className=\"column\">\n                                              <p>1 ETH = ${this.state.yesterdayprice.eth}</p>\n                                          </div>\n                                          <div className=\"column\">\n                                              <p>1 LTC = ${this.state.yesterdayprice.ltc}</p>\n                                          </div>\n                                      </div>\n                                  </div>\n                                  <div className=\"history--section__box__inner\">\n                                      <h4>{this.state.twodaysprice.date}</h4>\n                                      <div className=\"columns\">\n                                          <div className=\"column\">\n                                              <p>1 BTC = ${this.state.twodaysprice.btc}</p>\n                                          </div>\n                                          <div className=\"column\">\n                                              <p>1 ETH = ${this.state.twodaysprice.eth}</p>\n                                          </div>\n                                          <div className=\"column\">\n                                              <p>1 LTC = ${this.state.twodaysprice.ltc}</p>\n                                          </div>\n                                      </div>\n                                  </div>\n                                  <div className=\"history--section__box__inner\">\n                                      <h4>{this.state.threedaysprice.date}</h4>\n                                      <div className=\"columns\">\n                                          <div className=\"column\">\n                                              <p>1 BTC = ${this.state.threedaysprice.btc}</p>\n                                          </div>\n                                          <div className=\"column\">\n                                              <p>1 ETH = ${this.state.threedaysprice.eth}</p>\n                                          </div>\n                                          <div className=\"column\">\n                                              <p>1 LTC = ${this.state.threedaysprice.ltc}</p>\n                                          </div>\n                                      </div>\n                                  </div>\n                                  <div className=\"history--section__box__inner\">\n                                      <h4>{this.state.fourdaysprice.date}</h4>\n                                      <div className=\"columns\">\n                                          <div className=\"column\">\n                                              <p>1 BTC = ${this.state.fourdaysprice.btc}</p>\n                                          </div>\n                                          <div className=\"column\">\n                                              <p>1 ETH = ${this.state.fourdaysprice.eth}</p>\n                                          </div>\n                                          <div className=\"column\">\n                                              <p>1 LTC = ${this.state.fourdaysprice.ltc}</p>\n                                          </div>\n                                      </div>\n                                  </div>\n\n                              </div>\n                          </div>\n                      )\n                  }\n              }\n\n              export default History;"]},"metadata":{},"sourceType":"module"}